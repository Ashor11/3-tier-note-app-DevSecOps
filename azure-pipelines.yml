trigger:
  branches:
    include:
      - main
pool:
  name: Default

variables:
  - group: docker_vars
  - name: imageName
    value: feedback-app
  - name: imageTag
    value: $(Build.BuildId)
  
parameters:
  - name: environment
    displayName: Environment
    type: string
    default: dev
    values:
      - dev
      - prod
stages:

- stage: CI
  displayName: CI stage
  jobs:
  - job: backend
    steps:
    - checkout: self
    - displayName: install python
      task: UsePythonVersion@0
      inputs:
        versionSpec: '3.9'
        addToPath: true
    - script: |
        python -m pip install --upgrade pip
        pip install flask pytest flake8
      displayName: 'Install Flask and linting tools'
    - script: flake8 src/feedback_backend/app.py
      displayName: Linting Backend
      

  - job: docker
    dependsOn: backend
    displayName: docker build
    steps:
    - checkout: self
    - task: DockerInstaller@0
      displayName: 'Install Docker'
      inputs:
        dockerVersion: 'latest'
    - task: Docker@2
      condition: succeeded()
      displayName: 'Build frontend image'
      inputs:
        containerRegistry: 'dockerHubConnection'
        repository: '$(DOCKER_USERNAME)/$(imageName)-frontend'
        command: 'buildAndPush'
        Dockerfile: 'src/feedback_frontend/src/Dockerfile'
        tags: |
          $(Build.BuildId)
    - task: Docker@2
      displayName: 'Build backend image'
      condition: succeeded()
      inputs:
        containerRegistry: 'dockerHubConnection'
        repository: '$(DOCKER_USERNAME)/$(imageName)-backend'
        command: 'buildAndPush'
        Dockerfile: 'src/feedback_backend/Dockerfile'
        tags: |
          $(Build.BuildId)
    
      
