trigger:
  branches:
    include:
      - main
pool:
  name: Default

variables:
  - group: docker_vars
  - name: imageName
    value: feedback-app
  - name: imageTag
    value: $(Build.BuildId)
  
parameters:
  - name: environment
    displayName: environment
    type: string
    default: dev
    values:
      - dev
stages:
- stage: CD
  displayName: CD stage
  jobs:
  - deployment: deployToDev
    displayName: Deploy to ${{ parameters.environment }} EKS
    environment: '${{ parameters.environment }}'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
         # - task: ReplaceTokens@6
          ## inputs:
            #  rootDirectory: '$(System.DefaultWorkingDirectory)'        
             # targetFiles: 'k8s/*.yaml'
              #tokenPrefix: '${'
             # tokenSuffix: '}'
             # escapeType: 'json'
             # verbosity: 'detailed'
          - script: |
             sed -i "s|image: ${DOCKER_USERNAME}/${imageName}-frontend:${BUILD_BUILDID}|image: $(DOCKER_USERNAME)/$(imageName)-frontend:$(Build.BuildId)|g" k8s/frontend-deployment.yaml
             sed -i "s|image: ${DOCKER_USERNAME}/${imageName}-backend:${BUILD_BUILDID}|image: $(DOCKER_USERNAME)/$(imageName)-backend:$(Build.BuildId)|g" k8s/backend-deployment.yaml
             echo "Updated frontend-deployment.yaml:"
             grep -A 1 "image:" k8s/frontend-deployment.yaml
             echo "Updated backend-deployment.yaml:"
             grep -A 1 "image:" k8s/backend-deployment.yaml
            displayName: 'Update image tags in Kubernetes files'
            workingDirectory: '$(System.DefaultWorkingDirectory)'

          - task: AWSShellScript@1
            displayName: 'Update kubeconfig'
            inputs:
              awsCredentials: 'aws-credentials'
              regionName: 'us-east-1'
              scriptType: 'inline'
              inlineScript: |
                 aws eks update-kubeconfig --name my-eks-cluster --region us-east-1 
          - script: |
              kubectl create namespace ${{ parameters.environment }} --ignore-existing-namespace || true
              kubectl replace -f k8s/ -n ${{ parameters.environment }} --force
            displayName: 'Deploy to EKS'
            workingDirectory: '$(System.DefaultWorkingDirectory)'
              
